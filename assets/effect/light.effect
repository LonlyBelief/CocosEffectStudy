// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        speed: {value: 5.0}
        angle: {range: [0.0,360.]}
        width: {range: [0.01,1.0]}
        startoffset: {value : -1}
        masktexture: {value: white}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform Change{
    float speed;
    float angle;
    float width;
    float startoffset;
  };
  #if USE_MASK
  in vec2 masktexture_uv;
  uniform sampler2D masktexture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    float t = cc_time.x / speed;

    float a = tan(angle);

    vec4 c = vec4(1,1,1,1);

    #if USE_TEXTURE
    o *= texture(texture, v_uv0);
    #endif

    o *= v_color;    

    #if USE_MASK
    vec4 m = texture(masktexture,v_uv0);

    float mid = abs(o.z + m.z - 1.);    
    if(t < 1.0 - startoffset){
      float sy = startoffset + v_uv0.x * a + t;
      if(v_uv0.y >= sy && v_uv0.y <= sy + width){
        o = o * mid + m * (1. - mid);
      };
    }
    #endif
    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
