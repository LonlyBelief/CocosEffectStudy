// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        radius: {
          value: 0.5,
          editor: {tooltip: "半径",range: [0.0, 1.0, 0.01]}
          }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec3 v = a_position;

    vec4 pos = vec4(v, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE    
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform Circle{
    float radius;
  };

  void main () {
    float angle = mod(cc_time.x,360.);
    mat2 m = mat2(cos(angle), -sin(angle),sin(angle), cos(angle));
    vec2 or = vec2(0.5,0.5);
    
    vec4 o = vec4(1,1,1,1);

    vec2 v = m * (v_uv0 - or );

    if(length(v) > 1. * radius){
       discard ;
    };

    v = v+ or;

    #if USE_TEXTURE
    o *= texture(texture, v );
    #endif

     

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
